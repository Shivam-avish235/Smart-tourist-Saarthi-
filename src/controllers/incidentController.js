import Incident from '../models/Incident.js';
import Tourist from '../models/Tourist.js';
import { getIO } from '../socket/socket.js';

export const createIncident = async (req, res) => {
  try {
    const { touristId, type, severity, location, description, autoGenerated = false } = req.body;

    const tourist = await Tourist.findById(touristId);
    if (!tourist) {
      return res.status(404).json({ success: false, error: 'Tourist not found' });
    }

    const incident = new Incident({
      touristId,
      type,
      severity,
      location: location || tourist.currentLocation,
      description,
      autoGenerated,
      reportedBy: autoGenerated ? 'System' : (req.user?.id || 'Unknown'),
    });

    await incident.save();

    if (severity === 'Critical' || severity === 'High') {
      tourist.riskLevel = 'High';
      tourist.geofenceStatus = 'Alert';
      await tourist.save();
    }

    const io = getIO();
    io.emit('new_incident', { incident, tourist: { id: tourist._id, name: tourist.name, location: tourist.currentLocation } });

    res.status(201).json({ success: true, data: incident, message: 'Incident created successfully' });
  } catch (error) {
    res.status(500).json({ success: false, error: error.message });
  }
};
